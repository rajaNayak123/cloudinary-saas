generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Video {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String?
  publicId       String
  originalSize   String
  compressedSize String
  duration       Float
  userId         String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  user           User      @relation(fields: [userId], references: [userId])
  libraries      Library[] @relation(fields: [libraryIDs], references: [id])
  libraryIDs     String[]  @db.ObjectId
   comments       Comment[] 
}

model Library {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  ownerId   String
  owner     User     @relation("OwnedLibraries", fields: [ownerId], references: [userId])
  members   User[]   @relation("SharedLibraries", fields: [memberIDs], references: [id])
  memberIDs String[] @db.ObjectId
  videos    Video[]  @relation(fields: [videoIDs], references: [id])
  videoIDs  String[] @db.ObjectId
}

model User {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  userId             String    @unique
  isSubscribed       Boolean   @default(false)
  storageQuota       BigInt    @default(104857600) // 100MB in bytes
  videos             Video[]
  ownedLibraries     Library[] @relation("OwnedLibraries")
  sharedLibraries    Library[] @relation("SharedLibraries", fields: [sharedLibraryIDs], references: [id])
  sharedLibraryIDs   String[]  @db.ObjectId
   comments           Comment[] 
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [userId])
  videoId   String   @db.ObjectId
  video     Video    @relation(fields: [videoId], references: [id])
}
